package org.lorislab.clingo4j.api.c;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
import org.bridj.ann.Name;
import org.bridj.ann.Union;
/**
 * <i>native declaration : src/main/clingo/lib/c/clingo.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Name("clingo_ast_literal") 
@Library("clingo") 
public class clingo_ast_literal extends StructObject {
	/** C type : clingo_location_t */
	@Field(0) 
	public clingo_location location() {
		return this.io.getNativeObjectField(this, 0);
	}
	/** C type : clingo_location_t */
	@Field(0) 
	public clingo_ast_literal location(clingo_location location) {
		this.io.setNativeObjectField(this, 0, location);
		return this;
	}
	/** C type : clingo_ast_sign_t */
	@Field(1) 
	public int sign() {
		return this.io.getIntField(this, 1);
	}
	/** C type : clingo_ast_sign_t */
	@Field(1) 
	public clingo_ast_literal sign(int sign) {
		this.io.setIntField(this, 1, sign);
		return this;
	}
	/** C type : clingo_ast_literal_type_t */
	@Field(2) 
	public int type() {
		return this.io.getIntField(this, 2);
	}
	/** C type : clingo_ast_literal_type_t */
	@Field(2) 
	public clingo_ast_literal type(int type) {
		this.io.setIntField(this, 2, type);
		return this;
	}
	/** C type : field1_union */
	@Field(3) 
	public clingo_ast_literal.field1_union field1() {
		return this.io.getNativeObjectField(this, 3);
	}
	/** C type : field1_union */
	@Field(3) 
	public clingo_ast_literal field1(clingo_ast_literal.field1_union field1) {
		this.io.setNativeObjectField(this, 3, field1);
		return this;
	}
	/** <i>native declaration : src/main/clingo/lib/c/clingo.h:2200</i> */
	@Name("field1_union") 
	@Union 
	public static class field1_union extends StructObject {
		@Field(0) 
		public boolean boolean$() {
			return this.io.getBooleanField(this, 0);
		}
		@Field(0) 
		public field1_union boolean$(boolean boolean$) {
			this.io.setBooleanField(this, 0, boolean$);
			return this;
		}
		/** C type : const clingo_ast_term_t* */
		@Field(1) 
		public Pointer<clingo_ast_term > symbol() {
			return this.io.getPointerField(this, 1);
		}
		/** C type : const clingo_ast_term_t* */
		@Field(1) 
		public field1_union symbol(Pointer<clingo_ast_term > symbol) {
			this.io.setPointerField(this, 1, symbol);
			return this;
		}
		/** C type : const clingo_ast_comparison_t* */
		@Field(2) 
		public Pointer<clingo_ast_comparison > comparison() {
			return this.io.getPointerField(this, 2);
		}
		/** C type : const clingo_ast_comparison_t* */
		@Field(2) 
		public field1_union comparison(Pointer<clingo_ast_comparison > comparison) {
			this.io.setPointerField(this, 2, comparison);
			return this;
		}
		/** C type : const clingo_ast_csp_literal_t* */
		@Field(3) 
		public Pointer<clingo_ast_csp_literal > csp_literal() {
			return this.io.getPointerField(this, 3);
		}
		/** C type : const clingo_ast_csp_literal_t* */
		@Field(3) 
		public field1_union csp_literal(Pointer<clingo_ast_csp_literal > csp_literal) {
			this.io.setPointerField(this, 3, csp_literal);
			return this;
		}
		public field1_union() {
			super();
		}
		public field1_union(Pointer pointer) {
			super(pointer);
		}
	};
	public clingo_ast_literal() {
		super();
	}
	public clingo_ast_literal(Pointer pointer) {
		super(pointer);
	}
}
